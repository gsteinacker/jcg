<project name="jcg" default="all" basedir=".">

    <property file="build.properties"/>

    <property name="debug" value="true"/>
    <property name="optimize" value="false"/>
    <property name="build.compiler" value="javac1.5"/>

    <!-- dirs for test output -->
    <property name="test.output" value="${build.dir}/test-output"/>
    <property name="test.report" value="${build.dir}/test-report"/>

    <target name="all" depends="test, dist"/>

    <!-- ==================================================================== -->
    <!-- Compile                                                              -->
    <!-- ==================================================================== -->
    <path id="compile.cp">
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${jdk.home}">
            <include name="lib/tools.jar" />
        </fileset>
    </path>

    <target name="compile"
            description="compile jcg">

        <mkdir dir="${jcg.dir}/build/classes"/>
        <javac debug="true"
               fork="true"
               source="1.5"
               classpathref="compile.cp"
               srcdir="${jcg.dir}/src/main/java"
               destdir="${build.dir}/classes"
                />
        <copy todir="${build.dir}/classes">
            <fileset dir="${jcg.dir}/src/main/resources/">
                <include name="*" />
                <include name="**/*" />
            </fileset>
        </copy>

    </target>

    <target name="testcompile"
            description="test compile jcg"
            depends="compile">
        <mkdir dir="${jcg.dir}/build/testclasses"/>
        <javac debug="true"
               fork="true"
               source="1.5"
               classpathref="test.cp"
               srcdir="${jcg.dir}/src/test/java"
               destdir="${build.dir}/testclasses"
                />
        <copy todir="${build.dir}/testclasses">
            <fileset dir="${jcg.dir}/src/test/resources/">
                <include name="*" />
                <include name="**/*" />
            </fileset>
        </copy>
    </target>

    <target name="dist" depends="compile"
            description="generate the distribution">
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}/lib"/>
        <copy todir="${dist.dir}">
            <fileset dir="${jcg.dir}">
                <include name="README" />
                <include name="*.txt" />
                <include name="*.bat" />
                <include name="jcg*.xml" />
                <include name="jcg*.properties" />
            </fileset>
        </copy>
        <copy todir="${dist.dir}/lib">
            <fileset dir="${lib.dir}">
                <include name="*.jar" />
            </fileset>
        </copy>
        <jar jarfile="${dist.dir}/jcg-${release}.jar"
             basedir="${build.dir}/classes"/>
    </target>
    <!--target name="jar"
            description="make a jar with the property file and the classes we need in it">
        <jar destfile="${dist.dir}/jcg-${release}.jar">
            <fileset dir="${jcg.dir}/build/classes" includes="**/*.class"/>
            <fileset file="${jcg.dir}/testng.xml"/>
        </jar>
    </target-->

    <!-- ==================================================================== -->
    <!-- Test                                                                 -->
    <!-- ==================================================================== -->

    <path id="test.cp">
        <path refid="compile.cp"/>
        <pathelement location="${build.dir}/classes"/>
        <pathelement location="${build.dir}/testclasses"/>
    </path>

    <target name="test" depends="testcompile">
       <taskdef name="testng" classname="org.testng.TestNGAntTask"
            classpathref="test.cp"/>
        <testng classpathref="test.cp" outputDir="${build.dir}/testng"
            sourcedir="${build.dir}/testclasses" haltOnfailure="true">
            <xmlfileset dir="${jcg.dir}" includes="testng.xml"/>
        </testng>
    </target>

    <target name="clean"
            description="clean up jcg results">
        <delete dir="${build.dir}"/>
    </target>

</project>
